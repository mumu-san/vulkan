cmake_minimum_required(VERSION 3.21)

project(vulkan_xx)

# set c++ to newest standard
set(CMAKE_CXX_STANDARD 23)

# build glfw
set(GLFW_SDK_PATH "libs/glfw-3.3.9")
set(GLFW_BUILD_EXAMPLES OFF CACHE INTERNAL "Build the GLFW example programs")
set(GLFW_BUILD_TESTS OFF CACHE INTERNAL "Build the GLFW test programs")
set(GLFW_BUILD_DOCS OFF CACHE INTERNAL "Build the GLFW documentation")
set(GLFW_INSTALL OFF CACHE INTERNAL "Generate installation target")
add_subdirectory(${GLFW_SDK_PATH})

# define a vulkan sdk path
set(VULKAN_SDK_PATH "D:/Projects/VulkanSDK/1.3.275.0")
include_directories("${VULKAN_SDK_PATH}/Include")

# include the include directory
include_directories(include)

# recursively search for all .cpp or .cxx files in the src directory
file(GLOB_RECURSE SOURCES "src/*.cpp" "src/*.cxx")

# also add .h or .ixx files in the include directory to the project
file(GLOB_RECURSE HEADERS "include/*.h" "include/*.ixx")

# add the executable
add_executable(my_project ${SOURCES} ${HEADERS})

target_link_libraries(my_project "${VULKAN_SDK_PATH}/Lib/vulkan-1.lib")
target_link_libraries(my_project glfw)

# compile the shaders and copy them to the build directory
set(SPIRV_SHADERS "")
file(GLOB_RECURSE SHADERS "shader/*.comp" "shader/*.frag" "shader/*.geom" "shader/*.tesc" "shader/*.tese" "shader/*.vert")
set(SHADER_DIR "${CMAKE_CURRENT_BINARY_DIR}/compiled_shaders")

foreach(SHADER ${SHADERS})
    get_filename_component(SHADER_NAME ${SHADER} NAME)
    set(SPIRV "${SHADER_DIR}/${SHADER_NAME}.spv")
    add_custom_command(
        OUTPUT ${SPIRV}
        COMMAND ${CMAKE_COMMAND} -E make_directory "${SHADER_DIR}"
        COMMAND "${VULKAN_SDK_PATH}/Bin/glslc.exe" ${SHADER} -o ${SPIRV}
        DEPENDS ${SHADER}
    )
    list(APPEND SPIRV_SHADERS ${SPIRV})
endforeach(SHADER)

add_custom_target(build_shaders DEPENDS ${SPIRV_SHADERS})

add_dependencies(my_project build_shaders)

add_custom_command(TARGET my_project POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory "$<TARGET_FILE_DIR:my_project>/shader"
    COMMAND ${CMAKE_COMMAND} -E copy_directory "${SHADER_DIR}" "$<TARGET_FILE_DIR:my_project>/shader"
)